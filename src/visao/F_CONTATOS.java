package visao;

import biblioteca.Biblioteca;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import conexao.ConnConexao;
import biblioteca.ModeloTabela;
import Dao.DAOContato;
import static biblioteca.VariaveisPublicas.codigoSelecionado;
import static biblioteca.VariaveisPublicas.nomeRelatorio;
import controle.ControleListaContatos;
import controle.CtrlContato;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import modelo.Contato;
import static biblioteca.VariaveisPublicas.tabela;
import static biblioteca.VariaveisPublicas.sql;
import static biblioteca.VariaveisPublicas.totalRegs;
import controle.ControleGravarLog;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;

public class F_CONTATOS extends javax.swing.JFrame 
{
    ConnConexao conexao  = new ConnConexao();
    Biblioteca umabiblio              = new Biblioteca();
    Contato umModContato              = new Contato();
    DAOContato umDAOContato           = new DAOContato();        
    CtrlContato ctrContato            = new CtrlContato();
    ControleListaContatos umCtrLista  = new ControleListaContatos();
    ControleGravarLog umGravarLog     = new ControleGravarLog();
    String departamento, telefone, celular, nome, obs  = "";
    Boolean clicouNaTabela            = false;
    int codigo,ind                    = 0;
    boolean gravando;  //controla no botão gravar entre gravar novo registro e gravar alteração de um registro
    String sqlDefault  = "select * from tblcontatos order by nome";
    String sqlVazia    = "select * from tblcontatos where codigo = 0";

    public F_CONTATOS() {
        initComponents();
        PreencherTabela(sqlDefault);   //abre o formulario mostrando todos os registro cadastrados na tabela  
        Leitura();
        setResizable(false);   //desabilitando o redimencionamento da tela        
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE); //desabilitando o botao fechar
        this.setTitle(this.mostrarTituloDoFormulario());      
              
        //Impede que formulario seja arrastado na tela
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentMoved(ComponentEvent e) {
                setEnabled(false);
                setEnabled(true);
            }
        });//fim addComponentListener
        
        //configuracoes dos edits 
        umabiblio.configurarCamposTextos(txtPESQUISA);
        umabiblio.configurarCamposTextos(txtCODIGO);
        umabiblio.configurarCamposTextos(txtNOME);               
        umabiblio.configurarCamposTextos(txtDEPARTAMENTO);
        txtTELEFONE.setFont(new Font("TimesRoman", Font.BOLD, 14));  
        txtCELULAR.setFont(new Font("TimesRoman", Font.BOLD, 14));  
        txtOBS.setFont(new Font("TimesRoman", Font.BOLD, 14));  
                
       //configuração dos botões
       umabiblio.configurarBotoes(btnNovo);
       umabiblio.configurarBotoes(btnEditar);
       umabiblio.configurarBotoes(btnGravar);
       umabiblio.configurarBotoes(btnImprimir);
       umabiblio.configurarBotoes(btnVoltar);
       umabiblio.configurarBotoes(btnSair);
       jTabela.setFont(new Font("Arial", Font.BOLD, 12)); 
       txtCODIGO.setForeground(Color.red);
        
    }
   public final String mostrarTituloDoFormulario()
    {
        int qdeRegs       = umabiblio.qdeRegistros(tabela);
        //substring retira o TBL da palavra
        
        String nomeTabela = tabela.substring(3);
        nomeTabela        = nomeTabela.toLowerCase();  
        
        if(qdeRegs == 1){
           return "Gerenciamento de " + nomeTabela +" com "+qdeRegs+" registro cadastrado"; 
        }else{
           return "Gerenciamento de " + nomeTabela +" com "+qdeRegs+" registros cadastrados";    
        }                     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBoxDados = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        txtNOME = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCODIGO = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDEPARTAMENTO = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtOBS = new javax.swing.JTextField();
        txtTELEFONE = new javax.swing.JFormattedTextField();
        txtCELULAR = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jBoxBotoes = new javax.swing.JLayeredPane();
        btnGravar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabela = new javax.swing.JTable();
        jBoxPesquisar = new javax.swing.JLayeredPane();
        txtPESQUISA = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jBoxDados.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jBoxDados.setName("panelDados"); // NOI18N

        jLabel1.setText("NOME");

        txtNOME.setForeground(new java.awt.Color(51, 51, 255));
        txtNOME.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNOMEFocusGained(evt);
            }
        });
        txtNOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNOMEActionPerformed(evt);
            }
        });
        txtNOME.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtNOMEPropertyChange(evt);
            }
        });
        txtNOME.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNOMEKeyPressed(evt);
            }
        });

        jLabel3.setText("CÓDIGO");

        txtCODIGO.setForeground(new java.awt.Color(51, 51, 255));

        jLabel5.setText("TELEFONE");

        jLabel6.setText("DEPARTAMENTO");

        txtDEPARTAMENTO.setForeground(new java.awt.Color(51, 51, 255));
        txtDEPARTAMENTO.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDEPARTAMENTOFocusGained(evt);
            }
        });
        txtDEPARTAMENTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDEPARTAMENTOActionPerformed(evt);
            }
        });
        txtDEPARTAMENTO.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDEPARTAMENTOPropertyChange(evt);
            }
        });
        txtDEPARTAMENTO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDEPARTAMENTOKeyPressed(evt);
            }
        });

        jLabel7.setText("OBSERVAÇÕES");

        txtOBS.setForeground(new java.awt.Color(51, 51, 255));
        txtOBS.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOBSFocusGained(evt);
            }
        });
        txtOBS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOBSActionPerformed(evt);
            }
        });
        txtOBS.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtOBSPropertyChange(evt);
            }
        });

        txtTELEFONE.setForeground(new java.awt.Color(51, 51, 255));
        try {
            txtTELEFONE.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTELEFONE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTELEFONEFocusGained(evt);
            }
        });
        txtTELEFONE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTELEFONEKeyPressed(evt);
            }
        });

        txtCELULAR.setForeground(new java.awt.Color(51, 51, 255));
        try {
            txtCELULAR.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCELULAR.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCELULARFocusGained(evt);
            }
        });
        txtCELULAR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCELULARKeyPressed(evt);
            }
        });

        jLabel8.setText("CELULAR");

        jBoxDados.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(txtNOME, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(txtCODIGO, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(txtDEPARTAMENTO, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(txtOBS, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(txtTELEFONE, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(txtCELULAR, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxDados.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jBoxDadosLayout = new javax.swing.GroupLayout(jBoxDados);
        jBoxDados.setLayout(jBoxDadosLayout);
        jBoxDadosLayout.setHorizontalGroup(
            jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jBoxDadosLayout.createSequentialGroup()
                        .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtCODIGO, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtNOME, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTELEFONE, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jBoxDadosLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 29, Short.MAX_VALUE))
                            .addComponent(txtCELULAR))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jBoxDadosLayout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37))
                            .addComponent(txtDEPARTAMENTO)))
                    .addComponent(txtOBS)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jBoxDadosLayout.setVerticalGroup(
            jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNOME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jBoxDadosLayout.createSequentialGroup()
                        .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCODIGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDEPARTAMENTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTELEFONE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCELULAR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jBoxDadosLayout.createSequentialGroup()
                        .addGroup(jBoxDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addGap(31, 31, 31)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOBS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jBoxDados);
        jBoxDados.setBounds(10, 70, 700, 130);

        jBoxBotoes.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_gravar.jpg"))); // NOI18N
        btnGravar.setText("Gravar");
        btnGravar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_inicio.gif"))); // NOI18N
        btnVoltar.setText("Voltar");
        btnVoltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_sair.gif"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/users16.jpg"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_blocoNotas.gif"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_imprimir.gif"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        jBoxBotoes.setLayer(btnGravar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnVoltar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnSair, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnNovo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnEditar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnImprimir, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jBoxBotoesLayout = new javax.swing.GroupLayout(jBoxBotoes);
        jBoxBotoes.setLayout(jBoxBotoesLayout);
        jBoxBotoesLayout.setHorizontalGroup(
            jBoxBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jBoxBotoesLayout.setVerticalGroup(
            jBoxBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jBoxBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnNovo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGravar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jBoxBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jBoxBotoes);
        jBoxBotoes.setBounds(10, 210, 700, 67);

        jTabela.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTabela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabelaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTabelaMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTabela);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 280, 700, 270);

        jBoxPesquisar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jBoxPesquisar.setName("panelDados"); // NOI18N

        txtPESQUISA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPESQUISAActionPerformed(evt);
            }
        });
        txtPESQUISA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPESQUISAKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPESQUISAKeyReleased(evt);
            }
        });

        jBoxPesquisar.setLayer(txtPESQUISA, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jBoxPesquisarLayout = new javax.swing.GroupLayout(jBoxPesquisar);
        jBoxPesquisar.setLayout(jBoxPesquisarLayout);
        jBoxPesquisarLayout.setHorizontalGroup(
            jBoxPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPESQUISA, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                .addContainerGap())
        );
        jBoxPesquisarLayout.setVerticalGroup(
            jBoxPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPESQUISA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jBoxPesquisar);
        jBoxPesquisar.setBounds(10, 10, 700, 50);

        setSize(new java.awt.Dimension(730, 592));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void habilitarTxt(){
        txtNOME.setEditable(true);     
        txtTELEFONE.setEditable(true);    
        txtCELULAR.setEditable(true);  
        txtDEPARTAMENTO.setEditable(true);     
        txtOBS.setEditable(true);      
        
    }
    public void desabilitarTxt(){
        txtNOME.setEditable(false);     
        txtTELEFONE.setEditable(false);  
        txtCELULAR.setEditable(false);  
        txtDEPARTAMENTO.setEditable(false);     
        txtOBS.setEditable(false); 
        umabiblio.limparTodosCampos(jBoxDados);
    }
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        if(umabiblio.permissaoLiberada()){
            HabilitarDesabilitarBotoes(false);
            btnVoltar.setText("Cancelar");
            umabiblio.limparTodosCampos(jBoxDados);
            txtPESQUISA      .setText(null);
            txtNOME          .requestFocus();
            habilitarTxt();
            gravando = true;       
            txtCODIGO.setText(String.valueOf(umabiblio.mostrarProximoCodigo(tabela)));
            PreencherTabela(sqlVazia); 
        }        
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        //conexao.desconectar();
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
         if (gravando) {
            gravarRegistro();
        } else {
            editarRegistro();
        }
          Leitura();
        
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        Leitura();            
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if(umabiblio.permissaoLiberada()){
            Edicao(); 
            //controla apresentacao dos edits libera pra edição       
            txtNOME         .setEditable(true);
            txtTELEFONE     .setEditable(true);
            txtCELULAR      .setEditable(true);  
            txtDEPARTAMENTO .setEditable(true);
            txtOBS          .setEditable(true);       
            txtNOME.requestFocus();       
            PreencherTabela(sqlVazia); 
        }        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtPESQUISAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPESQUISAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPESQUISAActionPerformed
    
    private void mostrarDados()
    {
        umabiblio.limparTodosCampos(jBoxDados);
        //AO CLICAR EM UM REGISTRO DA TABELA MOSTRAR OS DADOS NOS EDITS        
        int codigo = (int) jTabela.getValueAt(jTabela.getSelectedRow(), 0);
        codigoSelecionado = codigo;

        sql = "SELECT * FROM tblcontatos WHERE codigo="+codigo+"";             
        conexao.conectar();
        conexao.ExecutarPesquisaSQL(sql);          
        try {          
            conexao.rs.first(); 
            //mostrando os dados do registro selecionado nos edits
            txtCODIGO.setText(String.valueOf(conexao.rs.getInt("codigo")));
            txtNOME.setText(conexao.rs.getString("nome")); 
            txtTELEFONE.setText(conexao.rs.getString("telefone"));
            txtCELULAR.setText(conexao.rs.getString("celular"));            
            txtDEPARTAMENTO.setText(conexao.rs.getString("departamento"));
            txtOBS.setText(conexao.rs.getString("obs"));
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Erro ao tentar selecionar a seção!\nERRO:"+ex.getMessage());
        }finally{
             conexao.desconectar();
        }

        //controla apresentacao dos edits
        txtPESQUISA     .setEditable(false);
        txtCODIGO       .setEnabled(true);
        txtCODIGO       .setEditable(false);
        txtNOME         .setEnabled(true);
        txtNOME         .setEditable(false);
        txtTELEFONE     .setEnabled(true);
        txtTELEFONE     .setEditable(false);
        txtCELULAR      .setEnabled(true);
        txtCELULAR     .setEditable(false);
        txtDEPARTAMENTO .setEnabled(true);
        txtDEPARTAMENTO .setEditable(false);
        txtOBS          .setEnabled(true);
        txtOBS          .setEditable(false);        
        
    }
    
    private void jTabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaMouseClicked
        //AO CLICAR EM UM REGISTRO DA TABELA MOSTRAR OS DADOS NOS EDITS
        mostrarDados();
        btnEditar      .setEnabled(true);
        btnGravar      .setEnabled(false);
        btnNovo        .setEnabled(false);
        btnImprimir    .setEnabled(true); //assim poderá imprimir o registro selecionado
        btnVoltar      .setEnabled(true);
        btnSair        .setEnabled(false);  
        clicouNaTabela = true;
        
    }//GEN-LAST:event_jTabelaMouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
         if(clicouNaTabela)
         {
              nomeRelatorio = "relcontatoselecionado";
          }else{
              nomeRelatorio = "relcontatos";
          } 
          btnVoltar.setEnabled(true);
          btnImprimir.setEnabled(false);  
          
          F_IMPRESSAO frm = new F_IMPRESSAO();
          frm.setVisible(true);         
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void jTabelaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabelaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabelaMouseEntered

    private void txtNOMEPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtNOMEPropertyChange

    }//GEN-LAST:event_txtNOMEPropertyChange

    private void txtNOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNOMEActionPerformed
        //Leitura();
    }//GEN-LAST:event_txtNOMEActionPerformed

    private void txtNOMEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNOMEFocusGained
        
    }//GEN-LAST:event_txtNOMEFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        conexao.conectar();        
        String sql="select * from tblcontatos order by nome";  
        conexao.ExecutarPesquisaSQL(sql);
        try {
            if( conexao.rs.next())
            {   //selecionando a primeira linha somente se tiver registros
                jTabela.addRowSelectionInterval(0,0);
            }
        }catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(null, "Erro ao preencher o combo de seções!\nErro: " + ex.getMessage());
        }finally{
             conexao.desconectar();
        }         
        
    }//GEN-LAST:event_formWindowOpened

    private void txtDEPARTAMENTOFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDEPARTAMENTOFocusGained
        txtDEPARTAMENTO.selectAll();//selecionando todo o texto pra edição
    }//GEN-LAST:event_txtDEPARTAMENTOFocusGained

    private void txtDEPARTAMENTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDEPARTAMENTOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDEPARTAMENTOActionPerformed

    private void txtDEPARTAMENTOPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDEPARTAMENTOPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDEPARTAMENTOPropertyChange

    private void txtOBSFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOBSFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOBSFocusGained

    private void txtOBSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOBSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOBSActionPerformed

    private void txtOBSPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtOBSPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOBSPropertyChange

    private void txtTELEFONEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTELEFONEFocusGained
        txtTELEFONE.selectAll();
    }//GEN-LAST:event_txtTELEFONEFocusGained

    private void txtPESQUISAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPESQUISAKeyPressed
        //se teclar enter estando dentro da pesquisa limpar a pesquisa
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtPESQUISA.setText(null);       
        }
    }//GEN-LAST:event_txtPESQUISAKeyPressed
    private void filtrarPorDigitacao(String pPesq)   
    {
        //filtrando por digitação pelos campos nome ou departamento
        PreencherTabela("select * from tblcontatos where (nome like '%"+pPesq+"%'"+" OR telefone like '%"+pPesq+"%'"+" OR departamento like '%"+pPesq+"%'"+") order by nome");
        this.setTitle("Total de registros retornados pela pesquisa = "+totalRegs);
    }
    private void txtPESQUISAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPESQUISAKeyReleased
         //filtrar o nome conforme o usuario for digitando
        filtrarPorDigitacao(txtPESQUISA.getText());
    }//GEN-LAST:event_txtPESQUISAKeyReleased

    private void txtNOMEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNOMEKeyPressed
        //se teclar enter pular para o proximo campo
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtTELEFONE.requestFocus();          
        }
    }//GEN-LAST:event_txtNOMEKeyPressed

    private void txtTELEFONEKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTELEFONEKeyPressed
        //se teclar enter pular para o proximo campo
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtCELULAR.requestFocus();          
        }
    }//GEN-LAST:event_txtTELEFONEKeyPressed

    private void txtDEPARTAMENTOKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDEPARTAMENTOKeyPressed
         //se teclar enter pular para o proximo campo
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtOBS.requestFocus();          
        }
    }//GEN-LAST:event_txtDEPARTAMENTOKeyPressed

    private void txtCELULARFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCELULARFocusGained
        txtCELULAR.selectAll();
    }//GEN-LAST:event_txtCELULARFocusGained

    private void txtCELULARKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCELULARKeyPressed
        //se teclar enter pular para o proximo campo
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtDEPARTAMENTO.requestFocus();          
        }
    }//GEN-LAST:event_txtCELULARKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_CONTATOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_CONTATOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_CONTATOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_CONTATOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_CONTATOS().setVisible(true);

            }
        });
    }
       
    private void gravarRegistro() {
        //se digitou algo nos campos nome e rf        
        if ( txtNOME.getText().length() > 0 ) 
        {
            //setando os valores dos edits 
            nome         = txtNOME.getText(); 
            celular      = txtCELULAR.getText(); 
            telefone     = txtTELEFONE.getText(); 
            departamento = txtDEPARTAMENTO.getText(); 
            obs          = txtOBS.getText(); 
                  
            umModContato.setNome(nome); 
            umModContato.setTelefone(telefone); 
            umModContato.setCelular(celular); 
            umModContato.setDepartamento(departamento); 
            umModContato.setObs(obs); 
            
            if (gravando){
                if(!umDAOContato.RegistroDuplicado(umModContato)) //se nao estiver duplicado libera a gravaçao do registro
                { 
                    ctrContato.salvarContato(umModContato);
                    umGravarLog.gravarLog("cadastro de "+umModContato.getNome());
                }  
            }
        } else {
            JOptionPane.showMessageDialog(null, "Preencha todos os campos para continuar!"); //se nao digitou nada no campo nome da seção
            txtNOME.requestFocus(); //foco no campo secao
        }
        PreencherTabela(sqlDefault);   
        gravando = false;
    }

    private void editarRegistro() 
    {
        //setando os valores dos edits  
        codigo         = Integer.parseInt(txtCODIGO.getText());
        nome           = txtNOME.getText(); 
        telefone       = txtTELEFONE.getText(); 
        celular        = txtCELULAR.getText(); 
        departamento   = txtDEPARTAMENTO.getText();  
        obs            = txtOBS.getText();  
        
        umModContato.setCodigo(codigo);
        umModContato.setNome(nome);
        umModContato.setTelefone(telefone); 
        umModContato.setCelular(celular); 
        umModContato.setDepartamento(departamento);
        umModContato.setObs(obs);
        
        ctrContato.atualizarContato(umModContato); 
        umGravarLog.gravarLog("atualizacao no cadastro de "+umModContato.getNome());
        
        Leitura();
        PreencherTabela(sqlDefault);
        txtNOME.setEditable(false);
        txtTELEFONE.setEditable(false);
        txtCELULAR.setEditable(false);
        txtDEPARTAMENTO.setEditable(false);
        txtOBS.setEditable(false);
        gravando = false;
    }    
    
    private void Edicao()
    {
        //metodo para quando usuario clicar em Editar
        boolean Habilitar = true;
        Component[]c      = null;
        gravando          = false; 
        
        btnNovo          .setEnabled(!Habilitar);
        btnImprimir      .setEnabled(!Habilitar);
        btnSair          .setEnabled(!Habilitar);
        btnGravar        .setEnabled(Habilitar);
        btnEditar        .setEnabled(!Habilitar);
        btnVoltar        .setEnabled(Habilitar);    
        btnVoltar.setText("Cancelar");
                
        //preenchendo a tabela com os registros
        PreencherTabela(sqlDefault); 
        
        //desabilitando os edits para edicao
        c = jBoxDados.getComponents();
        for(int i=0; i<c.length; i++)
        {
            c[i].setEnabled(Habilitar);  
        }
        txtCODIGO.setEditable(false);
        txtNOME.requestFocus();
                
        //mostrando o titulo com qde de registros cadastrados
        this.setTitle(this.mostrarTituloDoFormulario());                
                                  
        //habilitando a pesquisa  e preenchendo a tabela se tiver registros
         c = jBoxPesquisar.getComponents();
         for(int i=0; i<c.length; i++)
         {
            c[i].setEnabled(!Habilitar);
         }      
    }
   
    public void Leitura()
    {
        //formatacao inicial dos botoes ao abrir o formulario
        boolean Habilitar = true;
        Component[]c      = null;
        gravando          = false;
        clicouNaTabela    = false;
        
        txtPESQUISA.setEditable(true);
        
        btnNovo          .setEnabled(Habilitar);
        btnImprimir      .setEnabled(Habilitar);
        btnSair          .setEnabled(Habilitar);
        btnGravar        .setEnabled(!Habilitar);
        btnEditar        .setEnabled(!Habilitar);
        btnVoltar        .setEnabled(!Habilitar);      
                
        //preenchendo a tabela com os registros
        PreencherTabela(sqlDefault); 
        
        //desabilitando os edits para edicao
        c = jBoxDados.getComponents();
        for(int i=0; i<c.length; i++)
        {
            c[i].setEnabled(!Habilitar);  
            umabiblio.limparTodosCampos(this);
            txtPESQUISA.requestFocus();
        }
                       
        //mostrando o titulo com qde de registros cadastrados
        this.setTitle(this.mostrarTituloDoFormulario());
        
        //pulando de campo com enter, nao usei porque esse procedimento desabilita o metodo de enter pra apagar o campo de pesquisa
        //umabiblio.passaCamposComEnter(this);              
                                  
        //habilitando a pesquisa  e preenchendo a tabela se tiver registros
         c = jBoxPesquisar.getComponents();
         for(int i=0; i<c.length; i++)
         {
            c[i].setEnabled(Habilitar);
         }      
    }
    
     public void HabilitarDesabilitarBotoes(boolean Habilitar)
    {
        //ações para quando clicar em cada botão
        Component[]c = null;
        
        btnNovo          .setEnabled(Habilitar);
        btnGravar        .setEnabled(!Habilitar);
        btnEditar        .setEnabled(Habilitar);
        btnVoltar        .setEnabled(!Habilitar);
        btnImprimir      .setEnabled(Habilitar);
        btnSair          .setEnabled(Habilitar);
                
        //habilitando os edits para edicao
        c = jBoxDados.getComponents();
        for(int i=0; i<c.length; i++)
            c[i].setEnabled(!Habilitar);
        
        //desabilitando a pesquisa enquanto cadastra
        c = jBoxPesquisar.getComponents();
        for(int i=0; i<c.length; i++)
            c[i].setEnabled(Habilitar);
        
    }
       
   public void PreencherTabela(String sql)
   {
        conexao.conectar();
        ArrayList dados = new ArrayList();
        String[] Colunas = new String[]
        {
            "Código", "Nome", "Telefone", "Celular", "Departamento"
        };
            try 
            {     
                 conexao.ExecutarPesquisaSQL(sql); 
                 while (conexao.rs.next())
                 {   
                    dados.add(new Object[]
                    {
                        conexao.rs.getInt("codigo"),
                        conexao.rs.getString("nome"),
                        conexao.rs.getString("telefone"),
                        conexao.rs.getString("celular"),
                        conexao.rs.getString("departamento")

                    });
                    totalRegs = conexao.rs.getRow(); //passando o total de registros para o titulo
                 };
                ModeloTabela modelo = new ModeloTabela(dados, Colunas);
                jTabela.setModel(modelo);
                //define tamanho das colunas
                jTabela.getColumnModel().getColumn(0).setPreferredWidth(80);  //define o tamanho da coluna
                jTabela.getColumnModel().getColumn(0).setResizable(false);    //nao será possivel redimencionar a coluna 
                jTabela.getColumnModel().getColumn(1).setPreferredWidth(280);
                jTabela.getColumnModel().getColumn(1).setResizable(false);  
                jTabela.getColumnModel().getColumn(2).setPreferredWidth(80);
                jTabela.getColumnModel().getColumn(2).setResizable(false);  
                jTabela.getColumnModel().getColumn(3).setPreferredWidth(80);
                jTabela.getColumnModel().getColumn(3).setResizable(false);  
                jTabela.getColumnModel().getColumn(4).setPreferredWidth(140);
                jTabela.getColumnModel().getColumn(4).setResizable(false);  
                //define propriedades da tabela
                jTabela.getTableHeader().setReorderingAllowed(false);        //nao podera ser reorganizada
                jTabela.setAutoResizeMode(jTabela.AUTO_RESIZE_OFF);          //nao será possivel redimencionar a tabela
                jTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); //so podera selecionar apena uma linha  
                
               } catch (SQLException ex) {            
                   JOptionPane.showMessageDialog(null, "Erro ao preencher o ArrayList!\nErro: " + ex.getMessage());
        }finally{
             conexao.desconectar();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLayeredPane jBoxBotoes;
    private javax.swing.JLayeredPane jBoxDados;
    private javax.swing.JLayeredPane jBoxPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTabela;
    private javax.swing.JTable jTable1;
    private javax.swing.JFormattedTextField txtCELULAR;
    private javax.swing.JTextField txtCODIGO;
    private javax.swing.JTextField txtDEPARTAMENTO;
    private javax.swing.JTextField txtNOME;
    private javax.swing.JTextField txtOBS;
    private javax.swing.JTextField txtPESQUISA;
    private javax.swing.JFormattedTextField txtTELEFONE;
    // End of variables declaration//GEN-END:variables

}
