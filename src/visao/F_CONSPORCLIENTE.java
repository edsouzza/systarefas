package visao;

import biblioteca.Biblioteca;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import conexao.ConnConexao;
import biblioteca.ModeloTabela;
import static biblioteca.VariaveisPublicas.codigoCliente;
import static biblioteca.VariaveisPublicas.nomeCliente;
import static biblioteca.VariaveisPublicas.consultando;
import static biblioteca.VariaveisPublicas.consultou;
import static biblioteca.VariaveisPublicas.paramPesquisa;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import java.awt.Font;
import java.awt.Frame;

public class F_CONSPORCLIENTE extends javax.swing.JFrame 
{
    ConnConexao conexao  = new ConnConexao();
    Biblioteca    umabiblio          = new Biblioteca();
    String sqlPesquisa               = ""; 
    String sqlVazia                  = "Select codigo from tblPatrimonios where codigo = 0";
    int flag;
    
    public F_CONSPORCLIENTE() {
        initComponents();
        setResizable(false);   //desabilitando o redimencionamento da tela        
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE); //desabilitando o botao fechar
        
        //configuracoes dos edits   
        umabiblio.configurarCamposTextos(txtPESQUISA);
        
        //Impede que formulario seja arrastado na tela
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentMoved(ComponentEvent e) {
                setEnabled(false);
                setEnabled(true);
            }
        });//fim addComponentListener       
                
      //configuração dos botões      
      umabiblio.configurarBotoes(btnLimparPesquisa);
      umabiblio.configurarBotoes(btnTudo);
      umabiblio.configurarBotoes(btnSomenteMicros);
      umabiblio.configurarBotoes(btnSomenteMonitores);
      umabiblio.configurarBotoes(btnSair);
      jTabela.setFont(new Font("Arial", Font.BOLD, 12));  
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBoxBotoes = new javax.swing.JLayeredPane();
        btnLimparPesquisa = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnSomenteMicros = new javax.swing.JButton();
        btnSomenteMonitores = new javax.swing.JButton();
        btnTudo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTabela = new javax.swing.JTable();
        jBoxPesquisar = new javax.swing.JLayeredPane();
        txtPESQUISA = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setPreferredSize(new java.awt.Dimension(0, 0));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta Patrimonios pelo nome do Usuário");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jBoxBotoes.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnLimparPesquisa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnLimparPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_limpar.gif"))); // NOI18N
        btnLimparPesquisa.setText("Limpar");
        btnLimparPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLimparPesquisa.setEnabled(false);
        btnLimparPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparPesquisaActionPerformed(evt);
            }
        });

        btnSair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_sair.gif"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnSomenteMicros.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSomenteMicros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_calculadora.gif"))); // NOI18N
        btnSomenteMicros.setText("Micros");
        btnSomenteMicros.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSomenteMicros.setEnabled(false);
        btnSomenteMicros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSomenteMicrosActionPerformed(evt);
            }
        });

        btnSomenteMonitores.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSomenteMonitores.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_pesquisa.gif"))); // NOI18N
        btnSomenteMonitores.setText("Monitores");
        btnSomenteMonitores.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSomenteMonitores.setEnabled(false);
        btnSomenteMonitores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSomenteMonitoresActionPerformed(evt);
            }
        });

        btnTudo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTudo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_Livro.gif"))); // NOI18N
        btnTudo.setText("Tudo");
        btnTudo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTudo.setEnabled(false);
        btnTudo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTudoActionPerformed(evt);
            }
        });

        jBoxBotoes.setLayer(btnLimparPesquisa, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnSair, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnSomenteMicros, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnSomenteMonitores, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jBoxBotoes.setLayer(btnTudo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jBoxBotoesLayout = new javax.swing.GroupLayout(jBoxBotoes);
        jBoxBotoes.setLayout(jBoxBotoesLayout);
        jBoxBotoesLayout.setHorizontalGroup(
            jBoxBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLimparPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnTudo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSomenteMicros, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(btnSomenteMonitores, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jBoxBotoesLayout.setVerticalGroup(
            jBoxBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxBotoesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jBoxBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimparPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSomenteMicros, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSomenteMonitores, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTudo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(jBoxBotoes);
        jBoxBotoes.setBounds(10, 380, 670, 90);

        jTabela.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jTabela.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane2.setViewportView(jTabela);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 80, 670, 290);

        jBoxPesquisar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jBoxPesquisar.setName("panelDados"); // NOI18N

        txtPESQUISA.setToolTipText("");
        txtPESQUISA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPESQUISAFocusGained(evt);
            }
        });
        txtPESQUISA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPESQUISAKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPESQUISAKeyReleased(evt);
            }
        });

        jBoxPesquisar.setLayer(txtPESQUISA, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jBoxPesquisarLayout = new javax.swing.GroupLayout(jBoxPesquisar);
        jBoxPesquisar.setLayout(jBoxPesquisarLayout);
        jBoxPesquisarLayout.setHorizontalGroup(
            jBoxPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPESQUISA, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
                .addContainerGap())
        );
        jBoxPesquisarLayout.setVerticalGroup(
            jBoxPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBoxPesquisarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(txtPESQUISA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jBoxPesquisar);
        jBoxPesquisar.setBounds(10, 10, 670, 60);

        setSize(new java.awt.Dimension(699, 526));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        btnLimparPesquisaActionPerformed(null);
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed
    private void LimparPesquisa(){
        txtPESQUISA.setText(null);
        codigoCliente = 0;
        nomeCliente = null;
        paramPesquisa=null;
        PreencherTabela(sqlVazia);
        txtPESQUISA.requestFocus();
        btnLimparPesquisa.setEnabled(false);
        btnSomenteMicros.setEnabled(false);
        btnSomenteMonitores.setEnabled(false);
        btnTudo.setEnabled(false);
        consultando=false;
    }
    private void LimparAposPesquisa(){
        txtPESQUISA.setText(null);
        codigoCliente = 0;
        nomeCliente = null;
        paramPesquisa=null;
        txtPESQUISA.requestFocus();
        btnLimparPesquisa.setEnabled(false);
        btnSomenteMicros.setEnabled(false);
        btnSomenteMonitores.setEnabled(false);
        btnTudo.setEnabled(false);
        consultando=false;
    }
    private void btnLimparPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparPesquisaActionPerformed
        if(consultando) {
            LimparAposPesquisa();
        }else{
            LimparPesquisa();  
        }
        
    }//GEN-LAST:event_btnLimparPesquisaActionPerformed
        
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        LimparPesquisa();
    }//GEN-LAST:event_formWindowOpened
    
    private void txtPESQUISAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPESQUISAKeyPressed
        //se teclar enter estando dentro da pesquisa limpar a caixa de texto
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
          txtPESQUISA.setText(null);       
        }
    }//GEN-LAST:event_txtPESQUISAKeyPressed
    
    private void txtPESQUISAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPESQUISAKeyReleased
        //abre o formulario de escolha de clientes se digitar algo e limpa o campo
        F_LISTAPATRIMONIOS frm = new F_LISTAPATRIMONIOS(new Frame(),true);
        frm.setVisible(true);
        btnLimparPesquisa.setEnabled(true);
        btnSomenteMicros.setEnabled(true);
        btnSomenteMonitores.setEnabled(true);
        btnTudo.setEnabled(true);
        paramPesquisa = txtPESQUISA.getText();
        consultando = true;
        
    }//GEN-LAST:event_txtPESQUISAKeyReleased
    public void filtrarPatrimoniosCliente(int idCliente)
    {
        sqlPesquisa = "SELECT s.nome, p.serie, p.chapa, p.estacao, p.codigo, c.nome, t.* from tblsecoes s, tblpatrimonios p, tblclientes c, tbltipos t\n" +
                      "where p.tipoid=t.codigo and p.clienteid = "+idCliente+" and s.codigo=p.secaoid and p.clienteid = c.codigo and p.status='ATIVO' order by p.codigo";
        PreencherTabela(sqlPesquisa);
    }
    public void filtrarSomenteMicros(int idCliente)
    {
        sqlPesquisa = "SELECT s.nome, p.serie, p.chapa, p.estacao, p.codigo, c.nome, t.* from tblsecoes s, tblpatrimonios p, tblclientes c, tbltipos t\n" +
                      "where p.tipoid=t.codigo and p.clienteid = "+idCliente+" and s.codigo=p.secaoid and p.clienteid = c.codigo and p.status='ATIVO' and t.tipo='MICRO' order by p.codigo";
        PreencherTabela(sqlPesquisa);
    }
    public void filtrarSomenteMonitores(int idCliente)
    {
        sqlPesquisa = "SELECT s.nome, p.serie, p.chapa, p.estacao, p.codigo, c.nome, t.* from tblsecoes s, tblpatrimonios p, tblclientes c, tbltipos t\n" +
                      "where p.tipoid=t.codigo and p.clienteid = "+idCliente+" and s.codigo=p.secaoid and p.clienteid = c.codigo and p.status='ATIVO' and t.tipo='MONITOR' order by p.codigo";
        PreencherTabela(sqlPesquisa);
    }
    private void txtPESQUISAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPESQUISAFocusGained
        txtPESQUISA.setText(nomeCliente); 
        filtrarPatrimoniosCliente(codigoCliente);
    }//GEN-LAST:event_txtPESQUISAFocusGained

    private void btnSomenteMicrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSomenteMicrosActionPerformed
        filtrarSomenteMicros(codigoCliente);
    }//GEN-LAST:event_btnSomenteMicrosActionPerformed

    private void btnSomenteMonitoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSomenteMonitoresActionPerformed
        filtrarSomenteMonitores(codigoCliente);
    }//GEN-LAST:event_btnSomenteMonitoresActionPerformed

    private void btnTudoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTudoActionPerformed
        filtrarPatrimoniosCliente(codigoCliente);
    }//GEN-LAST:event_btnTudoActionPerformed
       
    public void PreencherTabela(String sql)
    {
        flag = 0;
        conexao.conectar();
        ArrayList dados = new ArrayList();
        //para receber os dados das colunas(exibe os titulos das colunas)
        String[] Colunas = new String[]{"Código", "Seção", "Tipo", "Série", "Chapa", "Estação"};
        try 
        {  
            conexao.ExecutarPesquisaSQL(sql);
            while (conexao.rs.next())
            {
                flag = 1;
                dados.add(new Object[]
                {
                    conexao.rs.getInt("codigo"),
                    conexao.rs.getString("nome"),
                    conexao.rs.getString("tipo"),                    
                    conexao.rs.getString("serie"),
                    conexao.rs.getString("chapa"),
                    conexao.rs.getString("estacao")
                });
            }; 
            if(consultando){
                    if (flag == 0) {  
                     JOptionPane.showMessageDialog(null, "Não foram encontrados patrimônios atrelados a este usuário!") ;
                     consultando=false;
                     //flag=0;
                     LimparAposPesquisa();
                    }
            }
               
                ModeloTabela modelo = new ModeloTabela(dados, Colunas);
                jTabela.setModel(modelo);
                //define tamanho das colunas
                jTabela.getColumnModel().getColumn(0).setPreferredWidth(50);  //define o tamanho da coluna
                jTabela.getColumnModel().getColumn(0).setResizable(false);    //nao será possivel redimencionar a coluna 
                jTabela.getColumnModel().getColumn(1).setPreferredWidth(150);
                jTabela.getColumnModel().getColumn(1).setResizable(false);  
                jTabela.getColumnModel().getColumn(2).setPreferredWidth(80);  
                jTabela.getColumnModel().getColumn(2).setResizable(false);    
                jTabela.getColumnModel().getColumn(3).setPreferredWidth(120);
                jTabela.getColumnModel().getColumn(3).setResizable(false);  
                jTabela.getColumnModel().getColumn(4).setPreferredWidth(150);
                jTabela.getColumnModel().getColumn(4).setResizable(false);  
                jTabela.getColumnModel().getColumn(5).setPreferredWidth(110);
                jTabela.getColumnModel().getColumn(5).setResizable(false);  
                //define propriedades da tabela
                jTabela.getTableHeader().setReorderingAllowed(false);        //nao podera ser reorganizada
                jTabela.setAutoResizeMode(jTabela.AUTO_RESIZE_OFF);          //nao será possivel redimencionar a tabela
                jTabela.setSelectionMode(ListSelectionModel.SINGLE_SELECTION); //so podera selecionar apena uma linha  
                
        } catch (SQLException ex) {
            //apos a consulta acima abrir o formulario mesmo que a tabela esteja vazia  
            JOptionPane.showMessageDialog(null, "Erro ao preencher o ArrayList!\nErro: " + ex.getMessage());
        }finally{
             conexao.desconectar();
             consultou=false;
        } 
        
        
    }
    
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_CONSPORCLIENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_CONSPORCLIENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_CONSPORCLIENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_CONSPORCLIENTE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_CONSPORCLIENTE().setVisible(true);

            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimparPesquisa;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSomenteMicros;
    private javax.swing.JButton btnSomenteMonitores;
    private javax.swing.JButton btnTudo;
    private javax.swing.JLayeredPane jBoxBotoes;
    private javax.swing.JLayeredPane jBoxPesquisar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTabela;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtPESQUISA;
    // End of variables declaration//GEN-END:variables

}
